stages:
  - build
  - codestyle
  - images

build staging:
  stage: build
  tags:
    - gpn-test-front
  script:
    - pwd | xargs /bin/bash /var/agent/front/01.sync.sh
    - /bin/bash /var/agent/front/02.npm_install.sh
    - /bin/bash /var/agent/front/03.ng_build.sh
    - /bin/bash /var/agent/front/04.change_girs.sh
    - exit 0
  only:
    - dev

codestyle staging:
  stage: codestyle
  tags:
    - gpn-test-front
  script:
    - cd www
    - pnpm i --dev --no-optional --ignore-scripts --prefer-offline
    - npm run tslint
    - exit 0
  only:
    - merge_requests

build preprod:
  stage: build
  tags:
    - gpn-preprod-front
  script:
    - pwd | xargs /bin/bash /var/www/agent/front/01.sync.sh
    - /bin/bash /var/www/agent/front/02.npm_install.sh
    - /bin/bash /var/www/agent/front/03.ng_build.sh
    - /bin/bash /var/www/agent/front/04.change_girs.sh
    - exit 0
  only:
    - /^release-.*$/i
  
prepare images:
  stage: images
  tags:
    - gpn-preprod-front
  script:
    - prepare-configs-for-angular
    - docker-compose -f dc-build-images.yml build
    - login-to-registry
    - docker-compose -f dc-build-images.yml push
  only:
    - /^release-.*$/i

build study:
  stage: build
  tags:
    - gpn-study-front
  script:
    - pwd | xargs /bin/bash /var/www/agent/study/front/01.sync.sh
    - /bin/bash /var/www/agent/study/front/02.npm_install.sh
    - /bin/bash /var/www/agent/study/front/03.ng_build.sh
    - /bin/bash /var/www/agent/study/front/04.change_girs.sh
    - exit 0
  only:
    - master
    - /^release-.*$/
  when: manual
  
build prod:
  stage: build
  tags:
    - gpn-prod-front
  script:
    - pwd | xargs /bin/bash /var/www/agent/front/01.sync.sh
    - /bin/bash /var/www/agent/front/02.npm_install.sh
    - /bin/bash /var/www/agent/front/03.ng_build.sh
    - /bin/bash /var/www/agent/front/04.change_girs.sh
    - exit 0
  only:
    - master
  when: manual


variables:
    GIT_DEPTH: "1"


.functions: &functions |
  function prepare-configs-for-angular() {
    rsync /var/www/html/gpnmarket_front/shared/config/app.config.ts www/src/app/config/
  }

  function login-to-registry() {
    docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD nexus-docker-registry.etpgpb.ru
  }
before_script:
  - *functions
